<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lvoooo.github.io</id>
    <title>lvoooo&apos;s memory</title>
    <updated>2019-08-27T08:42:47.155Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lvoooo.github.io"/>
    <link rel="self" href="https://lvoooo.github.io/atom.xml"/>
    <subtitle>治疗失忆。</subtitle>
    <logo>https://lvoooo.github.io/images/avatar.png</logo>
    <icon>https://lvoooo.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, lvoooo&apos;s memory</rights>
    <entry>
        <title type="html"><![CDATA[Linux 命令]]></title>
        <id>https://lvoooo.github.io/post/linux-ming-ling</id>
        <link href="https://lvoooo.github.io/post/linux-ming-ling">
        </link>
        <updated>2019-08-27T07:37:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="压缩">压缩</h3>
<pre><code class="language-shell">xz -d ***.tar.xz
tar -xvf  ***.tar
</code></pre>
<h3 id="用户">用户</h3>
<pre><code class="language-text">#添加用户到sudoer列表中
root 账户键入visudo
实际上是在修改 /etc/sudoers
在 root ALL=(ALL) ALL
这一行，

修改：
username  ALL=(ALL)      ALL
username  ALL=(ALL)       NOPASSWD:ALL
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fabric CA]]></title>
        <id>https://lvoooo.github.io/post/fabric-ca</id>
        <link href="https://lvoooo.github.io/post/fabric-ca">
        </link>
        <updated>2019-08-13T09:46:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="安装">安装</h3>
<ol>
<li>sudo apt update</li>
<li>sudo apt install libtool libltdl-dev</li>
<li>go get -u github.com/hyperledger/fabric-ca</li>
<li>cd $GOPATH/src/github.com/hyperledger/fabric-ca/</li>
<li>make fabric-ca-server</li>
<li>make fabric-ca-client</li>
<li>export PATH=<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>O</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mi mathvariant="normal">/</mi><mi>s</mi><mi>r</mi><mi>c</mi><mi mathvariant="normal">/</mi><mi>g</mi><mi>i</mi><mi>t</mi><mi>h</mi><mi>u</mi><mi>b</mi><mi mathvariant="normal">.</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi>r</mi><mi>l</mi><mi>e</mi><mi>d</mi><mi>g</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">/</mi><mi>f</mi><mi>a</mi><mi>b</mi><mi>r</mi><mi>i</mi><mi>c</mi><mo>−</mo><mi>c</mi><mi>a</mi><mi mathvariant="normal">/</mi><mi>b</mi><mi>i</mi><mi>n</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">GOPATH/src/github.com/hyperledger/fabric-ca/bin:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">u</span><span class="mord mathdefault">b</span><span class="mord">.</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>PATH</li>
</ol>
<h3 id="初始化">初始化</h3>
<ol>
<li>命令行 -home</li>
<li>FABRIC_CA_SERVER_HOME</li>
<li>FABRIC_CA_HOME</li>
<li>CA_CFG_PATH</li>
<li>使用当前目录</li>
</ol>
<h3 id="普通安装">普通安装</h3>
<ol>
<li>mkdir fabric-ca</li>
<li>cd fabric-ca</li>
<li>fabric-ca-server init -b admin:pass</li>
</ol>
<blockquote>
<p>admin 和 pass 是使用 ca 注册用户时候的用户名和密码<br>
默认在该目录下生成文件<br>
IssuerPublicKey<br>
IssuerRevocationPublicKey<br>
ca-cert.pem<br>
fabric-ca-server-config.yaml<br>
fabric-ca-server.db<br>
msp</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[NAT相关]]></title>
        <id>https://lvoooo.github.io/post/nat-xiang-guan</id>
        <link href="https://lvoooo.github.io/post/nat-xiang-guan">
        </link>
        <updated>2019-08-10T10:12:27.000Z</updated>
        <content type="html"><![CDATA[<p>类型（A-B）	建立状况<br>
<strong>完全锥型-完全锥型</strong>	A通过server获得B的IP:port开始通信<br>
<strong>完全锥型-IP限制型</strong>	B通过server获得A的IP:port开始通信<br>
<strong>完全锥型-port限制型</strong>	B通过server获得A的IP:port开始通信<br>
<strong>完全锥型-对称型</strong>	B通过server获得A的IP:port开始通信<br>
<strong>IP限制型-IP限制型</strong>	A通过server获得B的IP:port，A向B发送UDP包，数据通过自己的NAT时会为B建立NAT映射条目；B通过server获得A的IP:port，发送UDP包为A建立NAT映射条目，二者之后就可以开始通信。<br>
<strong>IP限制型-port限制型</strong>	A通过server获得B的IP:port，A向B发送UDP包，数据通过自己的NAT时会为B建立NAT映射条目；B通过server获得A的IP:port，发送UDP包为A建立NAT映射条目，二者之后就可以开始通信。<br>
<strong>IP限制型-对称型</strong>	A通过server获得B的IP:port1，A向B发送UDP包，数据通过自己的NAT时会为B建立NAT映射条目；B通过server获得A的IP:port，发送UDP包为A建立NAT映射条目，A收到B的UDP包，获得B新的IP:port2；A向B的新地址IP:port2发送数据，可以开始通信。<br>
<strong>port限制型-对称型</strong>	A通过server获得B的IP:port1，A向B发送UDP包，数据通过自己的NAT时会为B建立NAT映射条目；B通过server获得A的IP:port，发送UDP包为A建立NAT映射条目，但由于B更换了新端口port2，A刚建立的映射无法使用，A故此无法收到B为A通信使用的新端口，无法建立NAT映射，两者无法互通。<br>
<strong>对称型-对称型</strong>	同上，对称型开启新端口对方无法获悉，无法建立链接。<br>
无法P2P就需要用TURN服务器转发数据了…</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[常用工具]]></title>
        <id>https://lvoooo.github.io/post/chang-yong-gong-ju</id>
        <link href="https://lvoooo.github.io/post/chang-yong-gong-ju">
        </link>
        <updated>2019-07-28T09:20:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="teamviewer">TeamViewer</h3>
<h4 id="修改id">修改ID</h4>
<p><a href="https://blog.csdn.net/qq_39729527/article/details/86620987">参考链接</a></p>
<ol>
<li>退出TeamView账户，退出TeamView进程</li>
<li>编写 TeamViewer-id-changer.py</li>
<li>执行脚本</li>
<li>重启电脑</li>
</ol>
<pre><code>#!/usr/bin/env python 
#coding:utf-8
#  python2

import sys
import os
import glob
import platform
import re
import random
import string
 
print('''
--------------------------------
TeamViewer ID Changer for MAC OS
--------------------------------
''')
 
if platform.system() != 'Darwin':
    print('This script can be run only on MAC OS.')
    sys.exit();
 
if os.geteuid() != 0:
    print('This script must be run form root.')
    sys.exit();
 
if os.environ.has_key('SUDO_USER'):
    USERNAME = os.environ['SUDO_USER']
    if USERNAME == 'root':
       print('Can not find user name. Run this script via sudo from regular user')
       sys.exit();
else:
    print('Can not find user name. Run this script via sudo from regular user')
    sys.exit();
 
HOMEDIRLIB = '/Users/' + USERNAME  + '/Library/Preferences/'
GLOBALLIB  =  '/Library/Preferences/'
 
CONFIGS = []
 
# Find config files
 
def listdir_fullpath(d):
    return [os.path.join(d, f) for f in os.listdir(d)]
 
for file in listdir_fullpath(HOMEDIRLIB):
    if 'teamviewer'.lower() in file.lower():
        CONFIGS.append(file)
 
if not CONFIGS:
    print ('''
There is no TemViewer configs found.
Maybe you have deleted it manualy or never run TeamViewer after installation.
Nothing to delete.
''')
# Delete config files
else:
    print(&quot;Configs found:\n&quot;)
    for file in CONFIGS:
        print file
 
    print('''
This files will be DELETED permanently.
All TeamViewer settings will be lost
''')
    raw_input(&quot;Press Enter to continue or CTR+C to abort...&quot;)
 
    for file in CONFIGS:
        try:
            os.remove(file)
        except:
            print(&quot;Cannot delete config files. Permission denied?&quot;)
            sys.exit();
    print(&quot;Done.&quot;)
 
# Find binaryes
 
TMBINARYES = [
'/Applications/TeamViewer.app/Contents/MacOS/TeamViewer',
'/Applications/TeamViewer.app/Contents/MacOS/TeamViewer_Service',
'/Applications/TeamViewer.app/Contents/Helpers/TeamViewer_Desktop',
]
 
for file in TMBINARYES:
    if os.path.exists(file):
        pass
    else:
        print(&quot;File not found: &quot; + file)
        print (&quot;Install TeamViewer correctly&quot;)
        sys.exit();
 
# Patch files
 
def idpatch(fpath,platf,serial):
    file = open(fpath, 'r+b')
    binary = file.read()
    PlatformPattern = &quot;IOPlatformExpert.{6}&quot;
    SerialPattern =  &quot;IOPlatformSerialNumber%s%s%sUUID&quot;
 
    binary = re.sub(PlatformPattern, platf, binary)
    binary = re.sub(SerialPattern % (chr(0), &quot;[0-9a-zA-Z]{8,8}&quot;, chr(0)), SerialPattern%(chr(0), serial, chr(0)), binary)
 
    file = open(fpath,'wb').write(binary)
    return True
 
def random_generator(size=8, chars=string.ascii_uppercase + string.digits):
    return ''.join(random.choice(chars) for _ in range(size))
 
RANDOMSERIAL = random_generator()
RANDOMPLATFORM = &quot;IOPlatformExpert&quot; + random_generator(6)
 
 
for file in TMBINARYES:
        try:
            idpatch(file,RANDOMPLATFORM,RANDOMSERIAL)
        except:
            print &quot;Error: can not patch file &quot; + file
            print &quot;Wrong version?&quot;
            sys.exit();
 
print &quot;PlatformDevice: &quot; + RANDOMPLATFORM
print &quot;PlatformSerial: &quot; + RANDOMSERIAL
 
print('''
ID changed sucessfully.
!!! Restart computer before using TeamViewer !!!!
''')
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[框架]]></title>
        <id>https://lvoooo.github.io/post/kuang-jia</id>
        <link href="https://lvoooo.github.io/post/kuang-jia">
        </link>
        <updated>2019-07-25T10:46:28.000Z</updated>
        <content type="html"><![CDATA[<p>https://gin-gonic.com/docs/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mysql 连接方式以及配置]]></title>
        <id>https://lvoooo.github.io/post/mysql-lian-jie-fang-shi-yi-ji-pei-zhi</id>
        <link href="https://lvoooo.github.io/post/mysql-lian-jie-fang-shi-yi-ji-pei-zhi">
        </link>
        <updated>2019-07-10T03:10:11.000Z</updated>
        <content type="html"><![CDATA[<pre><code>mysql -h127.0.01 -uroot -p
mysql --socket=/var/lib/mysql/mysql.sock  -p
</code></pre>
<p>TCP连接（Linux，Windows）：<br>
目标	启动选项	默认值<br>
SERVER	--port=PORT	3306<br>
CLIENT	--protocol=TCP --port=PORT	3306</p>
<p>SOCKET连接（Linux）：<br>
目标	启动选项	默认值<br>
SERVER	--enable-named-pipe --socket=SOCKET	/tmp/mysql.sock<br>
CLIENT	--protocol=SOCKET --socket=SOCKET	/tmp/mysql.sock</p>
<p>PIPE连接（Windows）：<br>
目标	启动选项	默认值<br>
SERVER	--enable-named-pipe --socket=SOCKET	MYSQL<br>
CLIENT	--protocol=PIPE --socket=SOCKET	MYSQL</p>
<p>SHARED MEMORY连接（Windows）：<br>
目标	启动选项	默认值<br>
SERVER	--shared-memory --shared-memory-base-name=MEMORY	MySQL<br>
CLIENT	--protocol=MEMORY --shared-memory-base-name=MEMORY	MySQL</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://lvoooo.github.io/post/hello-gridea</id>
        <link href="https://lvoooo.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="http://hvenotes.fehey.com/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>𝖶𝗂𝗇𝖽𝗈𝗐𝗌</strong> 或 <strong>𝖬𝖺𝖼𝖮𝖲</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>